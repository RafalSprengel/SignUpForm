{"version":3,"sources":["App.js","index.js"],"names":["App","useState","name","setName","email","setEmail","pass","setPass","agree","setAgree","trySend","setTrySend","sent","setSent","errorName","setErrorName","errorEmail","setErrorEmail","errorPass","setErrorPass","errorAgree","setErrorAgree","messages","handleChangeInputs","e","FieldId","target","id","persist","value","length","indexOf","checked","console","log","onSubmit","preventDefault","setTimeout","alert","className","htmlFor","placeholder","onChange","event","colSpan","type","style","color","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.7f00d75f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nconst App = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [agree, setAgree] = useState(false);\n  const [trySend, setTrySend] = useState(false);\n  const [sent, setSent] = useState(false);\n\n  const [errorName, setErrorName] = useState(true);\n  const [errorEmail, setErrorEmail] = useState(true);\n  const [errorPass, setErrorPass] = useState(true);\n  const [errorAgree, setErrorAgree] = useState(true);\n\n  const messages = {\n    name: 'min 6 chars required and no space between',\n    email: 'must contain @ char',\n    pass: 'must have at least 6 chars',\n    agree: 'You have to agree to term and condition'\n  }\n\n  const handleChangeInputs = (e) => {\n    const FieldId = e.target.id;\n    e.persist();\n    switch (FieldId) {\n\n      case 'name':\n        setName(e.target.value);\n        if (e.target.value.length > 5 && e.target.value.indexOf(' ') === -1)\n          setErrorName(false)\n        else\n          setErrorName(true)\n        break;\n\n      case 'email':\n        setEmail(e.target.value);\n        (e.target.value.indexOf('@') > -1) ? setErrorEmail(false) : setErrorEmail(true);\n        break;\n\n      case 'pass':\n        setPass(e.target.value);\n        (e.target.value.length < 6) ? setErrorPass(true) : setErrorPass(false);\n        break;\n\n      case 'agree':\n        setAgree(e.target.checked);\n        (e.target.checked === false) ? setErrorAgree(true) : setErrorAgree(false);\n        break;\n\n      default:\n        console.log('code error');\n    }\n  }\n\n  const handleSendForm = (e) => {\n    e.preventDefault();\n    if (errorName === false && errorEmail === false && errorPass === false && errorAgree === false) {\n      setSent(true);\n      setName('');\n      setEmail('');\n      setPass('');\n      setAgree(false);\n      setTrySend(false);\n      setErrorName(true);\n      setErrorEmail(true);\n      setErrorPass(true);\n      setErrorAgree(true);\n      setTimeout(() => {\n        setSent(false)\n      }, 2000)\n    }\n    else {\n      alert('Please fill all fields correctly!');\n      setTrySend(true);\n    }\n  }\n  return (\n    <>\n\n      <div id='inner'>\n        <div id='title'>Sign Up</div>\n        <form id='personForm'\n          onSubmit={handleSendForm}\n          className={(sent) ? 'hidden' : ''}\n        >\n          <table >\n            <tbody>\n              <tr>\n                <td className='left'>\n                  <label htmlFor='name'>Your first Name: </label>\n                </td>\n                <td>\n                  <input\n                    id='name'\n                    placeholder='tape your name'\n                    className={((trySend && errorName) ? 'input-error' : '') + ((!errorName) ? ' input-ok' : '')}\n                    onChange={event => handleChangeInputs(event)}\n                    value={name}\n                  >\n                  </input>\n                  <br></br>\n                </td>\n                <td>\n                  <span className='message'>{(errorName) ? messages.name : <span className='mark-ok'>&#10003;</span>}\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td className='left'>\n                  <label htmlFor='email'>Your email: </label>\n                </td>\n                <td>\n                  <input\n                    id='email'\n                    placeholder='tape email'\n                    className={((trySend && errorEmail) ? ' input-error' : '') + ((!errorEmail) ? 'input-ok' : '')}\n                    onChange={handleChangeInputs}\n                    value={email}>\n                  </input>\n\n                </td>\n                <td>\n                  <span className='message'>{(errorEmail) ? messages.email : <span className='mark-ok'>&#10003;</span>} </span>\n                </td>\n              </tr>\n              <tr>\n                <td className='left'>\n                  <label htmlFor='password'>Your new password: </label>\n                </td>\n                <td>\n                  <input\n                    id='pass'\n                    placeholder='password'\n                    className={((trySend && errorPass) ? 'input-error' : '') + ((!errorPass) ? 'input-ok' : '')}\n                    onChange={handleChangeInputs}\n                    value={pass}\n                  ></input>\n                </td>\n                <td>\n                  <span className='message'>{(errorPass) ? messages.pass : <span className='mark-ok'>&#10003;</span>} </span>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan='3' id='td-agree'>\n                  <label htmlFor='agree'>\n                    <input\n                      type=\"checkbox\"\n                      id='agree'\n                      checked={agree}\n                      onChange={handleChangeInputs} />\n                    <span style={(errorAgree && trySend) ? { color: 'red' } : null}> I accept term and condition </span>{(!errorAgree) ? <span className='mark-ok'>&#10003;</span> : null}\n                  </label>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan='3'>\n                  <button type='submit' >Send</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </form>\n        {(sent) ? <div id='message'><span>You have successfully registered</span></div> : null}\n      </div>\n\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App'\n\nReactDom.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}